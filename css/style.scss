/* 
 * SASS Variables are defined with a $ character
 * and can have different kinds of data types: color, string, boolean, multi-value
 */

/* =====================================================
Variables 
===================================================== */

$myColor1       : navy;
$myColor2       : navy;

$primaryColor   : #1C2329;
$secColor       : #2A343D;
$gray           : #444F58;
$lightGray      : #77848C;
$lightestGray   : #9DA9AE;
$offWhite       : #FFFFF3;

$myStringVar: " with an appended string";

$myFontSize: 18px;

$thinBorder: 1px solid $myColor1;

$paddingVar: 15px 15px 15px 15px;

h1, h2 {
    color: $primaryColor;
}

#mypara {
    font-size: $myFontSize;
    border: $thinBorder;
    padding: $paddingVar;
}

#mypara:after {
    content: $myStringVar;
}

/* =====================================================
center content
===================================================== */

body {
	width: 90%;
	margin: 0 auto;
	padding: 0;
}

/* =====================================================
Nested Styles
===================================================== */

body {
    font-family: Helvetica, Arial, sans-serif;
    
    p {
        font-family:Times;
    }
    p#mypara {
        font-family: "Courier New";
    }
}

#mypara {
    color: $gray;
    border: 1px solid $lightGray;
    padding: 10px;
    // parent:hover || a:hover from this example
    &:hover {
        color: $secColor;
    }
}

/* =====================================================
SASS Mixins
===================================================== */

@mixin commonTraits {
    border-radius: 10px;
    border: 1px solid $lightestGray;
    padding: 10px;
}

header {
    color: $secColor;
    @include commonTraits;
}

footer {
    color: $primaryColor;
    @include commonTraits;
}

/* =====================================================
Operations
===================================================== */
$gender: boy;
$myColor: if($gender=="boy", #00f, #f00);

// $myColor		: #f00;
$basepadding	: 10px;
$basethickness	: 4px;

#mypara {
	// add colors together === magenta
    // color: $myColor + #00f;

    color: $myColor;
    // 4px + 10 = 14 / 2 = 7px 
    border: ($basethickness + 10 / 2) solid $myColor;
    // basic math to add more to preset $basepadding variable 
    padding: $basepadding + 20; // 10 + 20 = 30px
}


/* =====================================================
Advanced SASS 
===================================================== */

// using regular arguments
@mixin customBorder ($width, $color, $style) {
    border: {
        width: $width;
        color: $color;
        style: $style;
    }
}

// using named arguments with defaults
@mixin customBorder2 ($width: 1px, $color: black, $style: solid) {
    border: {
        width: $width;
        color: $color;
        style: $style;
    }
}

#mypara {
    @include customBorder(3px, blue, dotted);
}

h1, h3 {
	@include customBorder2(); // includes the default values
}

/* =====================================================
Functions
===================================================== */
$newColor: orange;

@mixin border-radius($radius: 5px) {
    -mox-border-radius: $radius;
    -webkit-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

.newColor {
    @include border-radius;
    border-color: hsl(hue($newColor), 45%, 60%);
    border-width: 2px;
    border-style:solid;
    padding: 10px;

    height: 50px;
    width: 150px;
    display: block;
    margin-bottom: 1em;
    // inverted
    background-color: grayscale(invert($newColor));

        p {
            text-align: center;
            color: $offWhite;
        }
}

h1 {
    color: $newColor;
    background-color: grayscale(invert($newColor));
}
h2 { 
    color: lighten($newColor, 20%);
}
h3 {
    color: lighten($newColor, 30%);
}
h4 {
    color: lighten($newColor, 40%);
}